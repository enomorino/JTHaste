function preload() {
    // Load the image
    backgroundImage1 = loadImage('images/backgroundlevel1.png');
}

function setup() {
    createCanvas(800, 600); // Increase canvas size
    // Set the background to the loaded image
    // Draw the image with desired width and height
    image(backgroundImage1, 0, 0, 600, 600);
}

///array busses

let dataBus = [
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,4,4,],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,1,1,1,4,],
    [4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1,4,4,4,],
    [4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4],
    [4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4],
    [4,1,3,3,3,3,3,3,3,3,3,1,1,1,1,1,1,3,3,3,3,3,3,3,3,1,1,1,1,1,1,1,1,1,4],
    [4,1,1,1,1,1,1,1,1,1,1,1,1,3,3,1,1,1,1,1,1,1,1,1,1,1,1,3,3,1,1,1,1,1,4],
    [4,1,3,3,3,3,3,3,3,3,3,1,1,3,3,1,1,3,3,3,3,3,3,3,3,1,1,3,3,1,1,1,1,1,4],
    [4,1,1,1,1,1,1,1,1,1,1,1,1,3,3,1,1,1,1,1,1,1,1,1,1,1,1,3,3,1,1,1,1,1,4],
    [4,1,3,3,3,3,3,3,3,3,3,1,1,3,3,1,1,3,3,3,3,3,3,3,3,1,1,3,3,1,1,1,1,1,4],
    [4,1,1,1,1,1,1,1,1,1,1,1,1,3,3,1,1,1,1,1,1,1,1,1,1,1,1,3,3,1,1,1,1,1,4],
    [4,1,3,3,3,3,3,3,3,3,3,1,1,1,1,1,1,3,3,3,3,3,3,3,3,1,1,1,1,1,1,1,1,1,4],
    [4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4],
    [4,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,4],
    [4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,1,4,4,4],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,1,1,1,1,4],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,4,4,4,4,4],
];

let dataRock = [
    [0,0,0,0,0,0,2,2,2,2,2,2],
    [0,0,0,0,0,2,0,0,0,0,0,0,0,0,0],
    [0,0,0,0,0,0,2,2,2,2,2,2,2,2,0],
    [0,0,0,0,0,0,2,3,3,3,3,3,3,3,2],
    [0,2,0,0,2,2,3,1,1,1,1,1,1,3,2],
    [2,0,2,2,3,3,1,3,1,1,1,1,1,1,3,2,2,0,2],
    [2,0,2,3,1,1,1,1,3,1,1,1,1,1,1,3,2,0,0,2],
    [2,0,2,3,1,1,1,3,1,1,1,1,1,1,1,1,3,2,0,2],
    [2,0,2,2,3,1,1,1,1,1,1,1,1,1,1,1,3,2,0,2],
    [0,2,0,2,3,1,1,1,1,1,1,1,1,1,1,3,2,2,0,2],
    [0,0,0,2,2,3,1,1,1,1,1,1,1,3,3,3,2,0,0,2],
    [0,0,0,0,0,2,3,3,3,3,3,3,3,2,2,2,2,0,2],
    [0,0,0,0,0,2,2,2,2,2,2,2,2,2],
    [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2],
    [0,0,0,0,0,0,0,2,2,2,2,2,2,2,2]
];

let dataCar = [  

    [0,0,0,0,0,0,2,2,2],
    [0,0,0,0,0,2,1,1,1,2,],
    [0,0,0,0,2,1,1,1,1,1,2],
    [0,0,0,0,0,2,1,1,1,2],
    [0,0,0,0,2,2,2,2,2,2,2],
    [0,0,0,2,1,1,1,1,1,1,1,2],
    [0,0,2,1,1,3,3,3,3,3,1,1,2],
    [0,0,2,1,3,1,3,3,3,1,3,1,2],
    [0,0,2,1,3,1,1,1,1,1,3,1,2],
    [0,0,2,1,3,1,1,1,1,1,3,1,2],
    [0,0,2,1,3,1,1,1,1,1,3,1,2],
    [0,0,2,1,1,1,4,4,4,1,1,1,2],
    [0,0,2,1,3,1,4,4,4,1,3,1,2],
    [0,0,2,1,3,1,4,4,4,1,3,1,2],
    [1,1,2,1,3,1,1,1,1,1,3,1,2,1,1],
    [0,0,2,1,1,3,3,3,3,3,1,1,2],
    [0,0,2,1,3,3,3,3,3,3,3,1,2],
    [0,0,0,2,1,1,1,1,1,1,1,2],
    [0,0,0,0,2,2,2,2,2,2,2],
    [0,0,0,2,1,1,1,1,1,1,1,2],
    [0,0,0,2,1,1,1,1,1,1,1,2],
    [0,0,0,2,1,1,1,1,1,1,1,2],
    [0,0,0,0,2,1,1,1,1,1,2],
    [0,0,0,0,0,2,2,2,2,2]
];


const size = 4;

function draw (){
    image(backgroundImage1, 0, 0, 600, 600);

    noStroke();
    push();
    translate(10, 360);
    for (let y in dataBus) {
      for (let x in dataBus[y]) {
        let pixel = dataBus[y][x];
        if (pixel === 1) {
          fill(190,10,20);
          rect(x * size, y * size, size, size);
        } else if (pixel === 2) {
          fill("black");
          rect(x * size, y * size, size, size);
        } else if (pixel === 3) {
          fill(216,36,41);
          rect(x * size, y * size, size, size);
        } else if (pixel === 4) {
            fill(139,0,0);
            rect(x * size, y * size, size, size);
          }
      }
    }
    pop();
    push();
    translate(110, 230);
    for (let y in dataRock) {
      for (let x in dataRock[y]) {
        let pixel = dataRock[y][x];
        if (pixel === 1) {
          fill("Grey");
          rect(x * size, y * size, size, size);
        } else if (pixel === 2) {
          fill(67,97,117);
          rect(x * size, y * size, size, size);
        } else if (pixel === 3) {
            fill(93,93,93);
            rect(x * size, y * size, size, size);
        } 

      }
    }
    pop();

    push();
    translate(100, 100);
    for (let y in dataCar) {
      for (let x in dataCar[y]) {
        let pixel = dataCar[y][x];
        if (pixel === 1) {
          fill("yellow");
          rect(x * size, y * size, size, size);
        } else if (pixel === 2) {
          fill(67,97,117);
          rect(x * size, y * size, size, size);
        } 
        else if (pixel === 3) {
            fill("black");
            rect(x * size, y * size, size, size);
          } 
          else if (pixel === 4) {
            fill("orange");
            rect(x * size, y * size, size, size);
          } 

      }
    }
    pop();
}



